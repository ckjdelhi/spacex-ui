{"version":3,"sources":["components/RocketDetails.js","slices/fetchRocketDetails.js","App.js","slices/index.js","index.js"],"names":["RocketDetails","details","flight_number","mission_name","mission_id","launch_year","launch_success","links","rocket","imgSrc","mission_patch_small","land_success","first_stage","cores","Card","className","key","src","alt","rocketDetailsSlice","createSlice","name","initialState","loading","hasErrors","rocketDetails","reducers","getRocketDetails","state","getRocketDetailsSuccess","payload","getRocketDetailsFailure","actions","rocketDetailsSelector","App","BASE_URL","dispatch","useDispatch","initialValues","items","isLoaded","filters","limit","undefined","upcoming","month","rocket_name","useState","values","setValues","lastYear","moment","subtract","format","lastMonth","console","log","useSelector","useEffect","url","filterUrl","queryString","stringify","a","fetch","response","json","data","updateApiFilters","type","value","prevValues","Container","fluid","Row","Col","xs","sm","md","lg","Body","Title","Text","Form","Control","placeholder","onBlur","e","target","Button","variant","toString","onClick","Math","random","map","rootReducer","combineReducers","fetchRocketDetailsReducer","store","configureStore","reducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.d975c132.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport './RocketDetails.css';\r\n\r\nfunction RocketDetails({ details }) {\r\n  const {\r\n    flight_number,\r\n    mission_name,\r\n    mission_id,\r\n    launch_year,\r\n    launch_success,\r\n    links,\r\n    rocket,\r\n  } = details;\r\n  const imgSrc = links.mission_patch_small;\r\n  const { land_success } = rocket.first_stage.cores[0];\r\n\r\n  return (\r\n    <Card className=\"Rocket-details-card\">\r\n      <div key={flight_number}>\r\n        <div>\r\n          <img\r\n            src={imgSrc}\r\n            alt=\"mission patch img not available on api\"\r\n            className=\"Rocket-mission-image\"\r\n          />\r\n        </div>\r\n        <div className=\"Rocket-mission-name-flight-number\">\r\n          {mission_name} #{flight_number}\r\n        </div>\r\n        <div className=\"Rocket-detail-label\">\r\n          Mission Ids:{' '}\r\n          <ul>\r\n            {' '}\r\n            <li className=\"Rocket-detail-value\">{mission_id}</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"Rocket-detail-label\">\r\n          Launch Year:{' '}\r\n          <span className=\"Rocket-detail-value\">{launch_year}</span>\r\n        </div>\r\n        <div className=\"Rocket-detail-label\">\r\n          Successful Launch:{' '}\r\n          <span className=\"Rocket-detail-value\">\r\n            {launch_success ? 'true' : 'false'}\r\n          </span>\r\n        </div>\r\n        <div className=\"Rocket-detail-label\">\r\n          Is it upcoming?:{' '}\r\n          <span className=\"Rocket-detail-value\">\r\n            {land_success ? 'true' : 'false'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RocketDetails;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  rocketDetails: [],\r\n};\r\n\r\nconst rocketDetailsSlice = createSlice({\r\n  name: 'rocketDetails',\r\n  initialState,\r\n  reducers: {\r\n    getRocketDetails: (state) => {\r\n      state.loading = true;\r\n    },\r\n    getRocketDetailsSuccess: (state, { payload }) => {\r\n      state.rocketDetails = payload;\r\n      state.loading = false;\r\n      state.hasErrors = false;\r\n    },\r\n    getRocketDetailsFailure: (state) => {\r\n      state.loading = false;\r\n      state.hasErrors = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getRocketDetails,\r\n  getRocketDetailsSuccess,\r\n  getRocketDetailsFailure,\r\n} = rocketDetailsSlice.actions;\r\nexport const rocketDetailsSelector = (state) => state.rocketDetails;\r\nexport default rocketDetailsSlice.reducer;\r\n\r\nexport function fetchRocketDetails(url) {\r\n  return async (dispatch) => {\r\n    dispatch(getRocketDetails());\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n\r\n      dispatch(getRocketDetailsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getRocketDetailsFailure());\r\n    }\r\n  };\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RocketDetails from './components/RocketDetails';\r\nimport {\r\n  fetchRocketDetails,\r\n  rocketDetailsSelector,\r\n} from './slices/fetchRocketDetails';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Card, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport queryString from 'query-string';\r\nimport moment from 'moment';\r\n\r\nconst App = () => {\r\n  const BASE_URL = 'https://api.spacexdata.com/v3/launches';\r\n  const dispatch = useDispatch();\r\n  const initialValues = {\r\n    items: [],\r\n    isLoaded: false,\r\n    filters: {\r\n      limit: 150,\r\n      launch_year: undefined,\r\n      launch_success: undefined,\r\n      upcoming: undefined,\r\n      month: undefined,\r\n      rocket_name: undefined,\r\n    },\r\n  };\r\n  const [values, setValues] = useState(initialValues);\r\n  const lastYear = moment().subtract(1, 'year').format('YYYY');\r\n  const lastMonth = moment().format('MMMM') + ' ' + moment().format('YYYY');\r\n  console.log(lastYear);\r\n  const { rocketDetails, loading, hasErrors } = useSelector(\r\n    rocketDetailsSelector\r\n  );\r\n\r\n  useEffect(() => {\r\n    let filterUrl =\r\n      (values.filters.upcoming ? BASE_URL + '/upcoming' : BASE_URL) +\r\n      '?' +\r\n      queryString.stringify({ ...values.filters });\r\n    dispatch(fetchRocketDetails(filterUrl));\r\n  }, [dispatch, values.filters]);\r\n\r\n  const updateApiFilters = (type, value) => {\r\n    if (values.filters[type] === value) {\r\n      value = undefined;\r\n    }\r\n\r\n    setValues((prevValues) => {\r\n      return {\r\n        ...prevValues,\r\n        filters: { ...prevValues.filters, [type]: value },\r\n      };\r\n    });\r\n  };\r\n  const rocketList = () => {\r\n    if (loading) return <p>Loading posts...</p>;\r\n    if (hasErrors) return <p>Unable to display posts.</p>;\r\n    return (\r\n      <Row>\r\n        {rocketDetails.map((details) => (\r\n          <Col md={12} lg={4} key={Math.random()}>\r\n            <RocketDetails details={details} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col xs={12} sm={12} md={6} lg={3}>\r\n          <Card className=\"App-filter-card\">\r\n            <Card.Body>\r\n              <Card.Title className=\"App-filter-header\">Search</Card.Title>\r\n              <Card.Text className=\"App-filter-heading-launch-year\">\r\n                By Rocket Name\r\n              </Card.Text>\r\n              <div className=\"App-filter-button-container\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Input here...\"\r\n                  onBlur={(e) =>\r\n                    updateApiFilters('rocket_name', e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className=\"App-filter-card\">\r\n            <Card.Body>\r\n              <Card.Title className=\"App-filter-header\">Filters</Card.Title>\r\n              <Card.Text className=\"App-filter-heading-launch-year\">\r\n                Last Year\r\n              </Card.Text>\r\n              <div className=\"App-filter-button-container\">\r\n                <Button\r\n                  className=\"App-filter-button\"\r\n                  variant={\r\n                    values.filters.launch_year === lastYear.toString()\r\n                      ? 'success'\r\n                      : 'outline-success'\r\n                  }\r\n                  value={lastYear}\r\n                  onClick={(e) =>\r\n                    updateApiFilters('launch_year', e.target.value)\r\n                  }\r\n                  key={Math.random()}\r\n                >\r\n                  {lastYear}\r\n                </Button>\r\n              </div>\r\n              <Card.Text className=\"App-filter-heading-launch-year\">\r\n                Last Month\r\n              </Card.Text>\r\n              <div className=\"App-filter-button-container\">\r\n                <Button\r\n                  className=\"App-filter-button\"\r\n                  variant={\r\n                    values.filters.month === lastMonth.toString()\r\n                      ? 'success'\r\n                      : 'outline-success'\r\n                  }\r\n                  value={lastMonth}\r\n                  onClick={(e) => updateApiFilters('month', e.target.value)}\r\n                  key={Math.random()}\r\n                >\r\n                  {lastMonth}\r\n                </Button>\r\n              </div>\r\n\r\n              <Card.Text className=\"App-filter-heading\">\r\n                Successful Launch\r\n              </Card.Text>\r\n\r\n              <div className=\"App-filter-button-container\">\r\n                <Button\r\n                  className=\"App-filter-button\"\r\n                  variant={\r\n                    values.filters.launch_success === 'true'\r\n                      ? 'success'\r\n                      : 'outline-success'\r\n                  }\r\n                  onClick={(e) =>\r\n                    updateApiFilters('launch_success', e.target.value)\r\n                  }\r\n                  value=\"true\"\r\n                >\r\n                  True\r\n                </Button>\r\n\r\n                <Button\r\n                  className=\"App-filter-button\"\r\n                  variant={\r\n                    values.filters.launch_success === 'false'\r\n                      ? 'success'\r\n                      : 'outline-success'\r\n                  }\r\n                  onClick={(e) =>\r\n                    updateApiFilters('launch_success', e.target.value)\r\n                  }\r\n                  value=\"false\"\r\n                >\r\n                  False\r\n                </Button>\r\n              </div>\r\n\r\n              <Card.Text className=\"App-filter-heading\">\r\n                Is it upcoming?\r\n              </Card.Text>\r\n              <div className=\"App-filter-button-container\">\r\n                <Button\r\n                  className=\"App-filter-button\"\r\n                  variant={\r\n                    values.filters.upcoming === 'true'\r\n                      ? 'success'\r\n                      : 'outline-success'\r\n                  }\r\n                  onClick={(e) => updateApiFilters('upcoming', e.target.value)}\r\n                  value=\"true\"\r\n                >\r\n                  True\r\n                </Button>\r\n\r\n                <Button\r\n                  className=\"App-filter-button\"\r\n                  variant={\r\n                    values.filters.land_success === 'false'\r\n                      ? 'success'\r\n                      : 'outline-success'\r\n                  }\r\n                  onClick={(e) =>\r\n                    updateApiFilters('land_success', e.target.value)\r\n                  }\r\n                  value=\"false\"\r\n                >\r\n                  False\r\n                </Button>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={12} sm={12} md={6} lg={9}>\r\n          {rocketList()}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux'\r\n\r\nimport fetchRocketDetailsReducer from './fetchRocketDetails'\r\n\r\nconst rootReducer = combineReducers({\r\n    rocketDetails: fetchRocketDetailsReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport App from './App'\r\nimport rootReducer from './slices'\r\n\r\nimport './index.css'\r\n\r\nconst store = configureStore({ reducer: rootReducer })\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}